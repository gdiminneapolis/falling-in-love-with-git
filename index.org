#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:t reveal_control:t reveal_title_slide:nil
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: toc:nil
#+REVEAL_TRANS: none
#+REVEAL_THEME: moon
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="GCI Class Falling in Love With Git 2.0">
#+REVEAL_POSTAMBLE: <div> Created by Tamara Temple &lt;tamara@tamouse.org&gt; </div>
#+REVEAL_PLUGINS: (markdown notes highlight)
#+BEGIN_EXPORT html
<style media="screen">
@import url("https://fonts.googleapis.com/css?family=Montserrat:700,700i");
.reveal h1,.reveal h2,.reveal h3,.reveal h4,.reveal h5,.reveal h6 {
text-transform: inherit; font-family: "Monserrat", sans-serif; font-weight: bold;
}

@import url("https://fonts.googleapis.com/css?family=Lato:400,400i");
.reveal section. .reveal div, .reveal p, .reveal ul, .reveal ol, .reveal li, .reveal dl, .reveal dt, .reveal dd,
.reveal blockquote, .reveal q, .reveal aside, .reveal figure, .reveal figcaption, .reveal article, .reveal header,
.reveal footer, .reveal span, .reveal i, .reveal b, .reveal em, .reveal strong {
font-family: "Lato", sans-serif;
}
.reveal .slide-number { color: white; }
.reveal section img.title-image {
  display: block;
  width: 25%;
  margin: 0 auto;
  border: none;
  background: transparent;
}
.reveal strong, .reveal b { color: white; }
.reveal em, .reveal i { color: lightgreen; }
.reveal code, .reveal tt { color: gold; }
.reveal pre { font-size: 0.7em; }
</style>
#+END_EXPORT

* Falling In Love With Git
  Sat, Oct 7, 2017 | GDI Mpls | Tamara Temple
  #+BEGIN_EXPORT html
  <img src="images/gdi_logo_badge.png" alt="GDI Logo" class="title-image">
  #+END_EXPORT

  - Network:
  - Password:

** Useful links for class

   Keep this open in your browser so you can refer to them as we go
   through class.

   - Slides:

   - Printed Notes:

   - [[https://gdimpls.slack.com/messages/C0BK2UA3X][#git-classes]] slack channel

* Welcome!

  Girl Develop It is here to provide affordable and accessible
  programs to women to learn software through mentorship and hands-on
  instruction.

  /Some Rules:/

  - We are here for you!
  - Every question is important
  - Help each other
  - Have fun

** Introductions

   - Who are you?
   - What do you do, or what do you want to do?
   - What's your experience with GDI?
   - What's your experience with Git and GitHub?

** Goals for Today's Course

   #+ATTR_REVEAL: :frag (roll-in)
   - Learn what version control is
   - Get you set up to use Git
   - Basics of Git
   - "Gitting" social with Github

* What is Version Control?

  Version control allows you and your team to do /two/ very powerful
  things:

  #+ATTR_REVEAL: :frag (roll-in)
 - *Collaborate*

 - *Track and Revert Changes*

** Collaborate

   You can create /anything/ with other people and be able to easily
   merge changes with each other

   #+ATTR_REVEAL: :frag (roll-in)
   - software
   - documentation
   - academic papers
   - books, articles, blogs
   - websites

** Track and Revert Changes

   Git gives you the ability to "go back in time"

   #+ATTR_REVEAL: :frag (roll-in)
   - see who made changes, when
   - track down bugs
   - see the history of the project
** Not Convinced Yet?

   #+ATTR_REVEAL: :frag (roll-in)
   - Employers *want* this
   - It's a required skill
   - It's a standard expectation to work in groups
     - public, i.e. opensource
     - private
   - It's personally useful

* Types of Version Control

  /There are basically two types:/

  #+ATTR_REVEAL: :frag (roll-in)

  - *Centralized:*
    - e.g. CVS, Subversion, Perforce

  - *Decentralized:*
    - e.g. Git, Mercurial (Hg)

** Centralized Version Control

   #+ATTR_REVEAL: :frag (roll-in)
   - One central source

   - Collaborators check files out

   - Work is done locally

   - Others are prevented from working on checked out files

   - Collaborators check files back in when done

** Decentralized Version Control

   #+ATTR_REVEAL: :frag (roll-in)
   - Local source, shared remote

   - Collaborators clone remote (fork, mirror)

   - Work is done locally

   - Others can work on same files

   - Changes are pushed to remote

   - Tools for merging conflicts
* Intro to Git

  #+ATTR_REVEAL: :frag (roll-in)
 - *Fast and easy setup:* You can get a whole team and / or project up
   and running quickly

 - *Distributed:* everyone has their own full repository of the
   project, changes are shared through a central Depot (remote,
   origin) repository

 - *Hashed commits:* commits have unique ID ~string~ to keep track of
   when changes are made and by whom
* Working with Git
** Creating repositories
** Staging changes
** Committing changes
** Pushing changes
* Installation

  Most systems come with some version of Git installed, but it's
  usually best to work with the most recent (or close to recent)
  version.

  Git itself is primarily a command line tool, and that is what we'll
  be covering today.

  There are also two good GUI tools that you can do most of what
  you'll learn today.

  - SourceTree
  - Github Desktop

** Command Line Git

   #+BEGIN_EXPORT html
   <div>
     <a href="http://git-scm.com/downloads"
        alt="Download latest version of Git"
        target="_blank" rel="noopener noreferrer">
       <img src="images/install-git.png" alt="Download latest version of Git">
     </a>
   </div>
   #+END_EXPORT


   #+BEGIN_EXPORT html
   <div>
     <a href="http://git-scm.com/downloads"
        alt="Download latest version of Git"
        target="_blank" rel="noopener noreferrer">
       git-scm.com/downloads
     </a>
   </div>
   #+END_EXPORT

   #+BEGIN_EXPORT html
   <a href="commandline.html" title="Command line class slides"
      target="_blank" rel="noopener noreferrer"
   >Class slides using command line</a>
   #+END_EXPORT

** SourceTree - a GUI Git client

   - An alternative to /most/ of the command line git tools

   - Download from:

     #+BEGIN_EXPORT html
     <a href="https://www.atlassian.com/software/sourcetree"
        title="Atlassian SourceTree Software"
        target="_blank" rel="noopener noreferrer"
        >https://www.atlassian.com/software/sourcetree</a>
     #+END_EXPORT

     #+BEGIN_EXPORT html
     <a href="sourcetree.html" title="Class slides with Sourcetree examples"
        target="_blank" rel="noopener noreferrer">Class slides using SourceTree</a>
     #+END_EXPORT

** GitHub Desktop - a GUI Git client

   - Another alternative to /most/ of the command line git tools

   - Download from:

     https://desktop.github.com/


   /(We won't be covering this tool in class.)/
* Working in Teams
** Making Pull Requests
** Reviewing Pull Requests
** Merging Pull Requsts
* Practical Git
** The project
** Form up in to teams
** Choose Roles
** Work Flow
* /- fin -/
  #+BEGIN_EXPORT html
  <img src="images/lliza-thank-you.gif" class="" alt="Thank you animated gif" />
  #+END_EXPORT

  Please fill out the survey at

  #+BEGIN_EXPORT html
  <a href="https://tinyurl.com/gdiMpls"
     target="_blank" rel="noopener noreferrer"
     >
    tinyurl.com/gdiMpls
  </a>
  #+END_EXPORT

  and use "Falling in Love with Git" for the class name
* Resources

  - [[https://git-scm.com][git-scm.com]] - home for git software, documentation, books, etc.
  - [[https://github.com][github.com]] - hosting service for git repositories
  - [[https://gitlab.com][gitlab.com]] - another hosting service for git repositories
  - [[https://bitbucket.com][bitbucket.com]] - yet another hosting service by Atlassian, people
    who make SourceTree

  All of these sites have extensive help and documentation.

** Cheat Sheets

   The GDIMpls cheat sheet repo:

   [[https://github.com/gdiminneapolis/cheat-sheet-collection][github.com/gdiminneapolis/cheat-sheet-collection]]

** Links, Info, Notes

   The GDIMpls Links, Info, and Notes repo:

   [[https://github.com/gdiminneapolis/LinksInfoNotes][github.com/gdiminneapolis/LinksInfoNotes]]

** Slack

   - [[https://gdimpls.slack.com/messages/C0BK2UA3X][#git-classes]] channel
   - [[https://gdimpls.slack.com/messages/C10RXJUQY][#coding-questions]] channel
